name: Matter Linux OTA Provider build

on: workflow_dispatch

jobs:
  build_prepare:
    name: Prepare build
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
      channel: ${{ steps.version.outputs.channel }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Get version
        id: version
        run: |
          version=${{ github.ref_name }}
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Checkout submodules
        working-directory: ./connectedhomeip/
        run: scripts/checkout_submodules.py --shallow --platform linux
      - name: Apply patches
        working-directory: ./connectedhomeip/
        run: |
          for p in ../*.patch; do
            [ -e "$p" ] || continue
            patch -p1 < "$p"
          done
      - name: Bootstrap
        working-directory: ./connectedhomeip/
        run: bash scripts/bootstrap.sh -p build,linux
      - name: ZAP Code pre-generation
        working-directory: ./connectedhomeip/
        run: scripts/run_in_build_env.sh "scripts/codepregen.py ./zzz_pregenerated/"
      - name: Create Matter SDK tar
        run: |
          tar -caf ../connectedhomeip.tar.zst \
            --exclude ./connectedhomeip/.environment \
            --use-compress-program=zstdmt .
          mv ../connectedhomeip.tar.zst ./connectedhomeip.tar.zst
      - name: Upload SDK artifact
        uses: actions/upload-artifact@v4
        with:
          name: matter-sdk
          path: ./connectedhomeip.tar.zst

  build_armv7:
    name: Build OTA Provider ARMv7
    runs-on: ubuntu-22.04
    needs: build_prepare
    container:
      image: arm32v7/debian:12-slim

    steps:
      - name: Download SDK artifact
        uses: actions/download-artifact@v4
        with:
          name: matter-sdk
      - name: Extract SDK
        run: |
          rm -rf connectedhomeip/
          tar -xaf connectedhomeip.tar.zst --use-compress-program=zstdmt
      - name: Install build deps & stub cipd
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential ninja-build cmake python3-venv zstd git pkg-config \
            libssl-dev libjson-c-dev libnl-3-dev libnl-route-3-dev
          rm -rf /var/lib/apt/lists/*
          mkdir -p connectedhomeip/.environment/cipd
          cat > connectedhomeip/.environment/cipd/cipd << 'EOF'
#!/bin/sh
exit 0
EOF
          chmod +x connectedhomeip/.environment/cipd/cipd
      - name: Bootstrap for ARMv7
        working-directory: ./connectedhomeip/
        run: bash scripts/bootstrap.sh -p all,linux
      - name: Build example
        working-directory: ./connectedhomeip/
        run: |
          mkdir -p out
          ./scripts/examples/gn_build_example.sh \
            examples/ota-provider-app/linux/ \
            out/ \
            chip_project_config_include_dirs=["//../../../.."] \
            chip_crypto=boringssl \
            chip_config_network_layer_ble=false \
            chip_enable_wifi=false \
            chip_enable_openthread=false \
            chip_exchange_node_id_logging=true \
            chip_mdns=minimal \
            chip_minmdns_default_policy=libnl \
            chip_use_data_model_interface=enabled
          mv out/chip-ota-provider-app bin/
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ota-provider-armv7
          path: connectedhomeip/bin/chip-ota-provider-app
